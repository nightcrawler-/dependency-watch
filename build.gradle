buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72'
		classpath 'org.jetbrains.kotlin:kotlin-serialization:1.3.72'
		classpath 'com.palantir.graal:gradle-graal:0.7.1'
	}
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'com.palantir.graal'
apply plugin: 'application'

mainClassName = 'watch.dependency.Main'

graal {
	graalVersion '20.1.0'
	javaVersion '8'

	mainClass mainClassName
	outputName 'dependency-watch'

	// Ensure we build a full standalone binary or fail.
	option '--no-fallback'

	// Include the necessary TLS bits for HTTPS connections.
	option '--enable-https'

	if (project.hasProperty('graalStatic')) {
		option '--static'
		option '--no-server'
	}

	// Error: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Invoke with MethodHandle
	// argument could not be reduced to at most a single call or single field access. The method handle
	// must be a compile time constant, e.g., be loaded from a `static final` field. Method that contains
	// the method handle invocation: java.lang.invoke.MethodHandle.invokeBasic(Object)
	// Detailed message:
	// Trace:
	//         at parsing java.lang.invoke.LambdaForm$MH/1035095880.invoke_MT(LambdaForm$MH)
	// Call path from entry point to java.lang.invoke.LambdaForm$MH/1035095880.invoke_MT(Object, Object, Object):
	//         at java.lang.invoke.LambdaForm$MH/1035095880.invoke_MT(LambdaForm$MH)
	//         at nl.adaptivity.xmlutil.StAXWriter.startDocument(StAXWriter.kt:412)
	option '--report-unsupported-elements-at-runtime'
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
	implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0'
	implementation 'com.charleskorn.kaml:kaml:0.18.1'
	implementation 'net.devrieze:xmlutil-jvm:0.20.0.1'
	implementation 'net.devrieze:xmlutil-serialization-jvm:0.20.0.1'
	implementation 'com.github.ajalt:clikt:2.8.0'
	implementation 'com.squareup.okhttp3:okhttp:4.8.1'
	// TODO re-enable once OkHttp ships https://github.com/square/okhttp/pull/6198
	//implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'

	compileOnly "org.graalvm.nativeimage:svm:${graal.graalVersion.get()}"

	testImplementation 'junit:junit:4.13'
	testImplementation 'com.google.truth:truth:1.0.1'
	testImplementation 'com.google.jimfs:jimfs:1.1'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
}

repositories {
	mavenCentral()
	jcenter()
}

tasks.named("distTar").configure { task ->
	task.enabled = false
}
tasks.named("assemble").configure { task ->
	task.dependsOn(tasks.getByName("installDist"))
}

tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
	task.kotlinOptions {
		jvmTarget = '1.8'
		languageVersion = '1.4'
		freeCompilerArgs += [
				'-progressive',
				'-XXLanguage:+NewInference',
				'-Xinline-classes',
				'-Xopt-in=kotlin.ExperimentalStdlibApi',
				'-Xopt-in=kotlin.ExperimentalUnsignedTypes',
				'-Xopt-in=kotlin.time.ExperimentalTime',
				'-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
				'-Xopt-in=kotlinx.coroutines.ObsoleteCoroutinesApi',
				'-Xopt-in=kotlinx.serialization.UnstableDefault',
		]
	}
}
